1704. Determine if String Halves Are Alike
Easy
Topics
Companies
Hint
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.
Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
 

Constraints:

2 <= s.length <= 1000
s.length is even.
s consists of uppercase and lowercase letters.


ans::

class Solution {
    public boolean halvesAreAlike(String s) {

        boolean ans = false;
        int vowel1=0;
        int con1=0;
        int vowel2=0;
        int con2=0;

        String a= s.substring(0,(s.length())/2);
        System.out.println(a);

        String b= s.substring((s.length())/2,s.length());
        System.out.println(b);

        for(int h=0;h<a.length();h++){
            char q=a.charAt(h);
 if( q =='a' || q =='e' || q =='i' || q =='o' ||q =='u'||  q =='A'||q =='E'|| q =='I'|| q  =='O'|| q =='U'){
                vowel1++;
            } else{
                con1++;
            }
        }

         for(int h=0;h<b.length();h++){
            char q=b.charAt(h);
 if(q =='a' || q =='e' || q =='i' || q   =='o' || q =='u' || q =='A'|| q =='E'|| q =='I'|| q =='O'|| q =='U'){
                vowel2++;
            } else{
                con2++;
            }
        }

        if(vowel1==vowel2 && con1==con2){
            ans=true;
        }

        
      return ans;  
    }
}

************************************************************************************************


2651. Calculate Delayed Arrival Time
Easy
Topics
Companies
Hint
You are given a positive integer arrivalTime denoting the arrival time of a train in hours, and another positive integer delayedTime denoting the amount of delay in hours.

Return the time when the train will arrive at the station.

Note that the time in this problem is in 24-hours format.

 

Example 1:

Input: arrivalTime = 15, delayedTime = 5 
Output: 20 
Explanation: Arrival time of the train was 15:00 hours. It is delayed by 5 hours. Now it will reach at 15+5 = 20 (20:00 hours).
Example 2:

Input: arrivalTime = 13, delayedTime = 11
Output: 0
Explanation: Arrival time of the train was 13:00 hours. It is delayed by 11 hours. Now it will reach at 13+11=24 (Which is denoted by 00:00 in 24 hours format so return 0).
 

Constraints:

1 <= arrivaltime < 24
1 <= delayedTime <= 24


ans::class Solution {
    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {

        int ans=0;
        int diff=Math.abs(arrivalTime+delayedTime);
        if(diff>=24){
            ans=diff-24;
        }else{
            ans=diff;
        }
      return ans;  
    }
}

*******************************************************************

1812. Determine Color of a Chessboard Square
Easy
Topics
Companies
Hint
You are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference.



Return true if the square is white, and false if the square is black.

The coordinate will always represent a valid chessboard square. The coordinate will always have the letter first, and the number second.

 

Example 1:

Input: coordinates = "a1"
Output: false
Explanation: From the chessboard above, the square with coordinates "a1" is black, so return false.
Example 2:

Input: coordinates = "h3"
Output: true
Explanation: From the chessboard above, the square with coordinates "h3" is white, so return true.
Example 3:

Input: coordinates = "c7"
Output: false
 

Constraints:

coordinates.length == 2
'a' <= coordinates[0] <= 'h'
'1' <= coordinates[1] <= '8'

ans::

class Solution {
    public boolean squareIsWhite(String coordinates) {

        boolean ans=true;

        for(int a=0;a<coordinates.length()-1;a++){

            int b=(int)coordinates.charAt(a);
            System.out.println(b);
            int c=coordinates.charAt(a+1)-'0';
            System.out.println(c);
        
            if(b%2!=0 && c%2!=0 || b%2==0 && c%2==0){
                ans=false;
            }else{
                ans=true;
            }
        }
       return ans; 
    }
}

************************************************************************

2185. Counting Words With a Given Prefix
Easy
Topics
Companies
Hint
You are given an array of strings words and a string pref.

Return the number of strings in words that contain pref as a prefix.

A prefix of a string s is any leading contiguous substring of s.

 

Example 1:

Input: words = ["pay","attention","practice","attend"], pref = "at"
Output: 2
Explanation: The 2 strings that contain "at" as a prefix are: "attention" and "attend".
Example 2:

Input: words = ["leetcode","win","loops","success"], pref = "code"
Output: 0
Explanation: There are no strings that contain "code" as a prefix.
 

Constraints:

1 <= words.length <= 100
1 <= words[i].length, pref.length <= 100
words[i] and pref consist of lowercase English letters.

ans::

class Solution {
    public int prefixCount(String[] words, String pref) {

        int count=0;

        for(String a:words){
            System.out.println(pref.length());

            if(a.length()>=pref.length()){
                 String b=a.substring(0,pref.length());

            if(b.equals(pref)){
                count++;
            }
            }
           
        }
      return count;  
    }
}
***************************************************************************************

1475. Final Prices With a Special Discount in a Shop
Solved
Easy
Topics
Companies
Hint
You are given an integer array prices where prices[i] is the price of the ith item in a shop.

There is a special discount for items in the shop. If you buy the ith item, then you will receive a discount equivalent to prices[j] where j is the minimum index such that j > i and prices[j] <= prices[i]. Otherwise, you will not receive any discount at all.

Return an integer array answer where answer[i] is the final price you will pay for the ith item of the shop, considering the special discount.

 

Example 1:

Input: prices = [8,4,6,2,3]
Output: [4,2,4,2,3]
Explanation: 
For item 0 with price[0]=8 you will receive a discount equivalent to prices[1]=4, therefore, the final price you will pay is 8 - 4 = 4.
For item 1 with price[1]=4 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 4 - 2 = 2.
For item 2 with price[2]=6 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 6 - 2 = 4.
For items 3 and 4 you will not receive any discount at all.
Example 2:

Input: prices = [1,2,3,4,5]
Output: [1,2,3,4,5]
Explanation: In this case, for all items, you will not receive any discount at all.
Example 3:

Input: prices = [10,1,1,6]
Output: [9,0,1,6]
 

Constraints:

1 <= prices.length <= 500
1 <= prices[i] <= 1000

ans::

class Solution {
    public int[] finalPrices(int[] prices) {

        int discount=0;
        int ansPoint=0;

        int [] ans=new int[prices.length];

        for(int a=0;a<prices.length;a++){

            if(a==(prices.length)-1){
                ans[a]=prices[a];
            }else{
                 for(int b=a+1;b<prices.length;b++){

                    if(prices[a]>=prices[b]){
                        ans[a]=prices[a]-prices[b];
                        break;
                    }else{
                        ans[a]=prices[a];
                    }

            }
            }
           
        }

        
     return ans;   
    }
}
**************************************************************************